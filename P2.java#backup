import greenfoot.*;  
public class P2 extends Obstacle {
    GreenfootImage blueball, flash;
    boolean isOnGround;
    int hSpeed = 0;
    int hSpeedMax = 10;
    int hFriction = 2;
    int hAccel = 4;
    int vSpeed = 0;
    int vSpeedMax = 25;
    boolean isonGround = false;
    boolean isJumping = false;
    int timer = 0;
    int aTimer = 0;
    int fTimer = 0;
    int health = 0;
    public int death2 = 0;
    boolean p1wins = false;
    int kcooldown = 25;
    boolean k = false;
    public P2() {
        blueball = new GreenfootImage("blue.png");
        flash = new GreenfootImage("blueWhite.png");
    }

    public void act() 
    {
        timer++;
        groundCheck();
        respawn();
        controls();
        friction();
        maxspeed();
        setLocation(getX()+hSpeed, getY()+vSpeed);
        collisions();
        kcooldown++;
        if (kcooldown > 25) {
            setImage(blueball);
        }
        else {
            setImage(flash);
        }
    }

    public void groundCheck(){
        int width = getImage().getWidth();
        int height = getImage().getHeight();
        Actor BL = getOneObjectAtOffset(-width/4,height/2+1, Obstacle.class);
        Actor BR = getOneObjectAtOffset(width/4,height/2+1, Obstacle.class);
        if(BL == null && BR == null){
            isonGround = false;
            if (timer % 2 == 0){
                vSpeed++;
            }
        }
        else{  
            isonGround = true;
        }
    }

    public void respawn() {
        if (getY()>1200){
            setLocation(World1.respawnPoint.getX(),World1.respawnPoint.getY());
            World1.mylives.decP2Lives();
            World1.lifecount2.updateScore();
        }
    }

    public void controls() { 
        if((Greenfoot.isKeyDown("RIGHT"))&&(!Greenfoot.isKeyDown("DOWN"))&&(!Greenfoot.isKeyDown("RIGHT"))) {

            if (hSpeed == 0){
                hSpeed = 2;
            }
            if (timer % hAccel == 0){
                hSpeed++;
            }
        }
        if(Greenfoot.isKeyDown("RIGHT")) {
            if (hSpeed == 0){
                hSpeed = 2;
            }
            if (timer % hAccel == 0){
                hSpeed++;
            }
        }
        if((Greenfoot.isKeyDown("LEFT"))&&(!Greenfoot.isKeyDown("DOWN"))&&(!Greenfoot.isKeyDown("RIGHT"))) {

            if (hSpeed == 0){

                hSpeed = -2;
            }
            if (timer % hAccel == 0){
                hSpeed--;
            }
        }
        if(Greenfoot.isKeyDown("UP")&&(isonGround == true)) {
            vSpeed = -15;
            isonGround = false;
            isJumping = true;

        }
        if((!Greenfoot.isKeyDown("UP"))&&(isJumping == true)) {
            vSpeed = vSpeed/2;  
            isJumping = false;
        }
        if(isonGround == true){

            isJumping = false;
        }        
        if((Greenfoot.isKeyDown("DOWN"))&&(isonGround == false)) {
            if (timer % 2 == 0) {
                vSpeed++;
            }
            //setLocation(getX(), getY()+9);

        }
    }

    public void friction() {
        if (((!Greenfoot.isKeyDown("RIGHT"))&&(!Greenfoot.isKeyDown("LEFT")))||((Greenfoot.isKeyDown("RIGHT"))&&(Greenfoot.isKeyDown("LEFT")))){
            if(hSpeed > 0) {
                if(timer % hFriction == 0){
                    hSpeed--;
                }
            }
            if(hSpeed < 0) {
                if(timer % hFriction == 0){
                    hSpeed++;
                }
            }
        }
    }

    public void maxspeed() {
        if (hSpeed > hSpeedMax){
            hSpeed = hSpeedMax;
        }
        if (hSpeed < -hSpeedMax){
            hSpeed = -hSpeedMax;
        }
        if (vSpeed > vSpeedMax){
            vSpeed = vSpeedMax;
        }
        if (vSpeed < -vSpeedMax){
            vSpeed = -vSpeedMax;
        }
    }

    public void collisions(){
         int width = getImage().getWidth();
        int height = getImage().getHeight();
        Actor B = getOneObjectAtOffset(0,height/2, Obstacle.class);
        Actor R = getOneObjectAtOffset(width/2,0, Obstacle.class);
        Actor L = getOneObjectAtOffset(-width/2,0, Obstacle.class);
        Actor T = getOneObjectAtOffset(0,-height/2, Obstacle.class);

        if(B != null){
            vSpeed-= 2;
            vSpeed*= -1;
            int obsY = B.getY();
            int obsH = B.getImage().getHeight();
            setLocation(getX(),obsY-obsH/2-height/2);
        }

        if(T != null){
            vSpeed+= 2;
            vSpeed*= -1/2; 
            int obsY = T.getY();
            int obsH = T.getImage().getHeight();
            setLocation(getX(),obsY+obsH/2+height/2);
        }

        if(L != null){
            hSpeed+= 2;
            hSpeed*= -1;
            int obsX = L.getX();
            int obsW = L.getImage().getWidth();
            setLocation(obsX+obsW/2+width/2,getY());
        }
        if(R != null){
            hSpeed-= 2;
            hSpeed*= -1;
            int obsX = R.getX();
            int obsW = R.getImage().getWidth();
            setLocation(obsX-obsW/2-width/2,getY());
        }

    }
    public int getvSpeed() {
        return vSpeed;
    }
     public int gethSpeed() {
        return hSpeed;
    }
}

