import greenfoot.*;  
public class CopyOfMario extends Obstacle {
    GreenfootImage redball;
    boolean isFacingRight = true;
    boolean isOnGround;
    int hSpeed = 0;
    int hSpeedMax = 10;
    int hFriction = 2;
    int hAccel = 4;
    int vSpeed = 0;
    int vSpeedMax = 15;
    boolean DownKey = false;
    boolean isonGround = false;
    boolean isJumping = false;
    boolean jumpAnimation = false;
    int walkr = 0;
    int timer = 0;
    int aTimer = 0;
    int fTimer = 0;
    int lives = 5;
    public CopyOfMario() {
        redball = new GreenfootImage("blue.png");
        //turningR.mirrorHorizontally();
    }

    public void act() 
    {
        timer++;
        walkr++;
        groundCheck();
        respawn();
        controls();
        friction();
        maxspeed();
        setLocation(getX()+hSpeed, getY()+vSpeed);
        collisions();
    }
    public int getLives(){
        return lives;
    }
    public void groundCheck(){
        int width = getImage().getWidth();
        int height = getImage().getHeight();
        Actor BL = getOneObjectAtOffset(-width/4,height/2+1, Obstacle.class);
        Actor BR = getOneObjectAtOffset(width/4,height/2+1, Obstacle.class);
        if(BL == null && BR == null){
            isonGround = false;
            if (timer % 2 == 0){
                vSpeed++;
            }
        }
        else{  
            isonGround = true;
        }
    }

    public void respawn() {
        if (getY()>800){
            setLocation(World1.respawnPoint.getX(),World1.respawnPoint.getY());
            World1.mylives.decP2Lives();
            World1.p2lifecount.updateScore();
        }
        
    }

    public void controls() { 
        if((Greenfoot.isKeyDown("RIGHT"))&&(!Greenfoot.isKeyDown("DOWN"))&&(!Greenfoot.isKeyDown("RIGHT"))) {
            
            if (hSpeed == 0){
                hSpeed = 2;
            }
            if (timer % hAccel == 0){
                hSpeed++;
            }
        }
       if(Greenfoot.isKeyDown("RIGHT")) {
            if (hSpeed == 0){
                hSpeed = 2;
            }
            if (timer % hAccel == 0){
                hSpeed++;
            }
        }
        if((Greenfoot.isKeyDown("LEFT"))&&(!Greenfoot.isKeyDown("DOWN"))&&(!Greenfoot.isKeyDown("RIGHT"))) {
            isFacingRight = false;
            if (hSpeed == 0){
                walkr = 0;
                hSpeed = -2;
            }
            if (timer % hAccel == 0){
                hSpeed--;
            }
        }
        if(Greenfoot.isKeyDown("UP")&&(isonGround == true)) {
            vSpeed = -15;
            isonGround = false;
            isJumping = true;
            jumpAnimation = true;
        }
        if((!Greenfoot.isKeyDown("UP"))&&(isJumping == true)) {
            vSpeed = vSpeed/2;  
            isJumping = false;
        }
        if(isonGround == true){
            jumpAnimation = false;
            isJumping = false;
        }        

         if((Greenfoot.isKeyDown("DOWN"))&&(isonGround == true)) {
            DownKey = true;
            setLocation(getX(), getY()+9);

        }
        if ((!Greenfoot.isKeyDown("RIGHT"))&&(!Greenfoot.isKeyDown("LEFT"))&&(!Greenfoot.isKeyDown("UP"))&&(!Greenfoot.isKeyDown("DOWN"))){

            if(DownKey == true) {
                DownKey = false;
                setLocation(getX(), getY()-9);
            } 
        }
        if ((Greenfoot.isKeyDown("DOWN"))&&((Greenfoot.isKeyDown("LEFT"))||(Greenfoot.isKeyDown("RIGHT"))||(Greenfoot.isKeyDown("UP")))){
            if(isonGround == true){
                vSpeed = 0;
            }
            hSpeed = 0;

        }
    }

    public void friction() {
        if (((!Greenfoot.isKeyDown("RIGHT"))&&(!Greenfoot.isKeyDown("LEFT")))||((Greenfoot.isKeyDown("RIGHT"))&&(Greenfoot.isKeyDown("LEFT")))){
            if(hSpeed > 0) {
                if(timer % hFriction == 0){
                    hSpeed--;
                }
            }
            if(hSpeed < 0) {
                if(timer % hFriction == 0){
                    hSpeed++;
                }
            }
        }
    }

    public void maxspeed() {
        if (hSpeed > hSpeedMax){
            hSpeed = hSpeedMax;
        }
        if (hSpeed < -hSpeedMax){
            hSpeed = -hSpeedMax;
        }
        if (vSpeed > vSpeedMax){
            vSpeed = vSpeedMax;
        }
        if (vSpeed < -vSpeedMax){
            vSpeed = -vSpeedMax;
        }
    }

    public void collisions(){
        int width = getImage().getWidth();
        int height = getImage().getHeight();
        Actor BL = getOneObjectAtOffset(-width/4,height/2, Obstacle.class);
        Actor BR = getOneObjectAtOffset(width/4,height/2, Obstacle.class);
        Actor TL = getOneObjectAtOffset(-width/4,-height/2, Obstacle.class);
        Actor TR = getOneObjectAtOffset(width/4,-height/2, Obstacle.class);
        Actor LT = getOneObjectAtOffset(-width/2,-height/4, Obstacle.class);
        Actor LB = getOneObjectAtOffset(-width/2,height/4, Obstacle.class);
        Actor RT = getOneObjectAtOffset(width/2,-height/4, Obstacle.class);
        Actor RB = getOneObjectAtOffset(width/2,height/4, Obstacle.class);
        if(BL != null){
            vSpeed = 0;
            int obsY = BL.getY();
            int obsH = BL.getImage().getHeight();
            setLocation(getX(),obsY-obsH/2-height/2);
        }
        if(BR != null){
            vSpeed = 0;
            int obsY = BR.getY();
            int obsH = BR.getImage().getHeight();
            setLocation(getX(),obsY-obsH/2-height/2);
        }
        if(TL != null){
            vSpeed = 0;
            int obsY = TL.getY();
            int obsH = TL.getImage().getHeight();
            setLocation(getX(),obsY+obsH/2+height/2);
        }
        if(TR != null){
            vSpeed = 0;
            int obsY = TR.getY();
            int obsH = TR.getImage().getHeight();
            setLocation(getX(),obsY+obsH/2+height/2);
        }
        if(LT != null){
            hSpeed = 0;
            int obsX = LT.getX();
            int obsW = LT.getImage().getWidth();
            setLocation(obsX+obsW/2+width/2,getY());
        }
        if(LB != null){
            hSpeed = 0;
            int obsX = LB.getX();
            int obsW = LB.getImage().getWidth();
            setLocation(obsX+obsW/2+width/2,getY());
        }
        if(RT != null){
            hSpeed = 0;
            int obsX = RT.getX();
            int obsW = RT.getImage().getWidth();
            setLocation(obsX-obsW/2-width/2,getY());
        }
        if(RB != null){
            hSpeed = 0;
            int obsX = RB.getX();
            int obsW = RB.getImage().getWidth();
            setLocation(obsX-obsW/2-width/2,getY());
        }
    }
}

